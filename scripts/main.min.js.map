{"version":3,"sources":["main.js"],"names":["getTimeRemaining","endtime","t","Date","parse","seconds","Math","floor","minutes","hours","days","total","initializeClock","id","updateClock","daysSpan","innerHTML","hoursSpan","slice","minutesSpan","secondsSpan","clearInterval","timeinterval","clock","document","getElementById","querySelector","setInterval","isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","btnMap","mapWrapper","addEventListener","classList","toggle","deadline"],"mappings":";;;;;;;;;;;;;;;;;;CAmBA,WACA,YA6DA,SAAAA,GAAAC,GACA,GAAAC,GAAAC,KAAAC,MAAAH,GAAAE,KAAAC,MAAA,GAAAD,OACAE,EAAAC,KAAAC,MAAAL,EAAA,IAAA,IACAM,EAAAF,KAAAC,MAAAL,EAAA,IAAA,GAAA,IACAO,EAAAH,KAAAC,MAAAL,EAAA,KAAA,IACAQ,EAAAJ,KAAAC,MAAAL,EAAA,MACA,QACAS,MAAAT,EACAQ,KAAAA,EACAD,MAAAA,EACAD,QAAAA,EACAH,QAAAA,GAIA,QAAAO,GAAAC,EAAAZ,GAQA,QAAAa,KACA,GAAAZ,GAAAF,EAAAC,EAEAc,GAAAC,UAAAd,EAAAQ,KACAO,EAAAD,WAAA,IAAAd,EAAAO,OAAAS,UACAC,EAAAH,WAAA,IAAAd,EAAAM,SAAAU,UACAE,EAAAJ,WAAA,IAAAd,EAAAG,SAAAa,UAEAhB,EAAAS,OAAA,GACAU,cAAAC,GAhBA,GAKAA,GALAC,EAAAC,SAAAC,eAAAZ,GACAE,EAAAQ,EAAAG,cAAA,SACAT,EAAAM,EAAAG,cAAA,UACAP,EAAAI,EAAAG,cAAA,YACAN,EAAAG,EAAAG,cAAA,WAgBAZ,KACAQ,EAAAK,YAAAb,EAAA,KA5FA,GAAAc,GAAAC,QAAA,cAAAC,OAAAC,SAAAC,UAEA,UAAAF,OAAAC,SAAAC,UAEAF,OAAAC,SAAAC,SAAAC,MACA,0DAIA,kBAAAC,aACA,WAAAJ,OAAAC,SAAAI,UAAAP,IACAM,UAAAE,cAAAC,SAAA,qBACAC,KAAA,SAAAC,GAEAA,EAAAC,cAAA,WAKA,GAAAN,UAAAE,cAAAK,WAAA,CAGA,GAAAC,GAAAH,EAAAI,UAEAD,GAAAE,cAAA,WACA,OAAAF,EAAAG,OACA,IAAA,YAKA,KAEA,KAAA,YACA,KAAA,IAAAC,OAAA,yDAvBAZ,SAgCA,SAAAa,GACAC,QAAAC,MAAA,4CAAAF,IAKA,IAAAG,GAAA1B,SAAAE,cAAA,kBACAyB,EAAA3B,SAAAE,cAAA,OACAwB,GAAAE,iBAAA,QAAA,WACAD,EAAAE,UAAAC,OAAA,iBA2CA,IAAAC,GAAA,gCACA3C,GAAA,WAAA2C","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n  var btnMap = document.querySelector('.detail-js-map');\n  var mapWrapper = document.querySelector('.map');\n  btnMap.addEventListener('click', function() {\n    mapWrapper.classList.toggle('map--visible');\n  });\n\n  function getTimeRemaining(endtime) {\n    var t = Date.parse(endtime) - Date.parse(new Date());\n    var seconds = Math.floor((t / 1000) % 60);\n    var minutes = Math.floor((t / 1000 / 60) % 60);\n    var hours = Math.floor((t / (1000 * 60 * 60)) % 24);\n    var days = Math.floor(t / (1000 * 60 * 60 * 24));\n    return {\n      total: t,\n      days: days,\n      hours: hours,\n      minutes: minutes,\n      seconds: seconds\n    };\n  }\n\n  function initializeClock(id, endtime) {\n    var clock = document.getElementById(id);\n    var daysSpan = clock.querySelector('.days');\n    var hoursSpan = clock.querySelector('.hours');\n    var minutesSpan = clock.querySelector('.minutes');\n    var secondsSpan = clock.querySelector('.seconds');\n    var timeinterval;\n\n    function updateClock() {\n      var t = getTimeRemaining(endtime);\n\n      daysSpan.innerHTML = t.days;\n      hoursSpan.innerHTML = ('0' + t.hours).slice(-2);\n      minutesSpan.innerHTML = ('0' + t.minutes).slice(-2);\n      secondsSpan.innerHTML = ('0' + t.seconds).slice(-2);\n\n      if (t.total <= 0) {\n        clearInterval(timeinterval);\n      }\n    }\n\n    updateClock();\n    timeinterval = setInterval(updateClock, 1000);\n  }\n\n  var deadline = 'July 29 2017 14:30:00 GMT+0200';\n  initializeClock('clockdiv', deadline);\n})();\n"]}